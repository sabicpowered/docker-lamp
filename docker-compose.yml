version: "3.8"

services:
  php-fpm:
    build:
      context: ./bin/php81-fpm
    container_name: 'php81-fpm'
    restart: 'always'
    working_dir: /var/www
    ports:
      - "9000:9000"
    volumes:
      - ${DOCUMENT_ROOT-./www}:/var/www
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
    depends_on:
      - database
  nginx:
    image: nginx:alpine
    container_name: 'nginx'
    restart: 'always'
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${DOCUMENT_ROOT-./www}:/var/www
      - ${NGINX_CONFIG-./config/nginx/}:/etc/nginx/conf.d/
      - ${SSL_VOLUME-./config/ssl}:/etc/ssl
    depends_on:
      - php-fpm

#   webserver1:
#     build:
#       context: ./bin/${PHPVERSION1}
#     container_name: '${COMPOSE_PROJECT_NAME}-${PHPVERSION1}'
#     restart: 'always'
#     ports:
#       - "${HOST_MACHINE_UNSECURE_HOST_PORT1}:80"
#       - "${HOST_MACHINE_SECURE_HOST_PORT1}:443"
#     depends_on:
#       - database
#     volumes:
#       - ${DOCUMENT_ROOT-./www}:/var/www
#       - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
#       - ${VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
#       - ${SSL_VOLUME-./config/ssl}:/etc/apache2/ssl
#       - ${LOG_DIR-./logs/apache2}:/var/log/apache2
#       - ${XDEBUG_LOG_DIR-./logs/xdebug}:/var/log/xdebug
#     environment:
#       APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
#       PMA_PORT: ${HOST_MACHINE_PMA_PORT}
#       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#       MYSQL_USER: ${MYSQL_USER}
#       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#       MYSQL_DATABASE: ${MYSQL_DATABASE}
#       HOST_MACHINE_MYSQL_PORT: ${HOST_MACHINE_MYSQL_PORT}
#       XDEBUG_CONFIG: "client_host=host.docker.internal remote_port=${XDEBUG_PORT}"
#     extra_hosts:
#       - "host.docker.internal:host-gateway"
#  webserver2:
#    build:
#      context: ./bin/${PHPVERSION2}
#    container_name: '${COMPOSE_PROJECT_NAME}-${PHPVERSION2}'
#    restart: 'always'
#    ports:
#      - "${HOST_MACHINE_UNSECURE_HOST_PORT2}:80"
#      - "${HOST_MACHINE_SECURE_HOST_PORT2}:443"
#    depends_on:
#      - database
#    volumes:
#      - ${DOCUMENT_ROOT-./www}:/var/www/html
#      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
#      - ${VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
#      - ${SSL_VOLUME-./config/ssl}:/etc/apache2/ssl
#      - ${LOG_DIR-./logs/apache2}:/var/log/apache2
#      - ${XDEBUG_LOG_DIR-./logs/xdebug}:/var/log/xdebug
#    environment:
#      APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
#      PMA_PORT: ${HOST_MACHINE_PMA_PORT}
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#      MYSQL_USER: ${MYSQL_USER}
#      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#      MYSQL_DATABASE: ${MYSQL_DATABASE}
#      HOST_MACHINE_MYSQL_PORT: ${HOST_MACHINE_MYSQL_PORT}
#      XDEBUG_CONFIG: "client_host=host.docker.internal remote_port=${XDEBUG_PORT}"
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
  database:
    build:
      context: "./bin/${DATABASE}"
    container_name: '${COMPOSE_PROJECT_NAME}-${DATABASE}'
    restart: 'always'
    ports:
      - "127.0.0.1:${HOST_MACHINE_MYSQL_PORT}:3306"
    volumes:
      - ${MYSQL_INITDB_DIR-./config/initdb}:/docker-entrypoint-initdb.d
      - ${MYSQL_DATA_DIR-./data/mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: '${COMPOSE_PROJECT_NAME}-phpmyadmin'
    depends_on:
      - database
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      UPLOAD_LIMIT: ${UPLOAD_LIMIT}
      MEMORY_LIMIT: ${MEMORY_LIMIT}
    ports:
      - '${HOST_MACHINE_PMA_PORT}:80'
    volumes:
      - /sessions
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
  redis:
    container_name: '${COMPOSE_PROJECT_NAME}-redis'
    image: redis:latest
    ports:
      - "127.0.0.1:${HOST_MACHINE_REDIS_PORT}:6379"
  mongo:
    image: mongo
    restart: always
    container_name: '${COMPOSE_PROJECT_NAME}-mongo'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - "127.0.0.1:${HOST_MACHINE_MONGO_PORT}:27017"
    volumes:
      - ${MONGO_DATA_DIR-./data/mongo}:/data/db
      - ${MONGO_ARCHIVE_DIR-./data/mongo/archive}:/Databases/dev.archive
      - ${MONGO_LOG_DIR-./logs/mongo}:/Databases/production
  mongo-express:
    image: mongo-express
    restart: always
    container_name: '${COMPOSE_PROJECT_NAME}-mongo-express'
    ports:
      - "127.0.0.1:${HOST_MACHINE_ME_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@mongo:27017/?authSource=admin
#      ME_CONFIG_BASICAUTH_USERNAME: ${ME_USER}
#      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_PASSWORD}
    depends_on:
      - mongo
